@page "/rates"
@using XUMM.Net.Clients.Interfaces
@using XUMM.Net.Models.Misc

@inject IXummMiscClient _miscClient

<PageTitle>Rates</PageTitle>

<ResponseAlertBox @ref="_responseAlertBox"></ResponseAlertBox>

<h1>Rates</h1>

<div class="row align-items-start">
    <div class="col">
        <div class="mb-3">
            <label for="currency" class="form-label">Currency</label>
            <input id="currency" class="form-control" placeholder="The 3 alpha char currency code" aria-label="Currency" aria-describedby="basic-addon2" @bind="_currency">
            <small id="currencyhelp" class="form-text text-muted">eg. INR</small>
        </div>
        <button class="btn btn-primary" type="button" @onclick="GetRatesAsync">Fetch Rates</button>
    </div>
    <div class="col">
        @if (_rates != null)
        {
            <dl class="row">
                <dt class="col-sm-2">Name</dt>
                <dd class="col-sm-10 text-break">@_rates.Meta.Currency.En</dd>
                <dt class="col-sm-2">USD</dt>
                <dd class="col-sm-10 text-break">$ @_rates.USD</dd>
                <dt class="col-sm-2">XRP</dt>
                <dd class="col-sm-10 text-break">@_rates.XRP XRP</dd>
            </dl>
        }
    </div>
</div>

@code {
    private ResponseAlertBox _responseAlertBox = default!;
    private string _currency = default!;
    private XummRates? _rates;

    private async Task GetRatesAsync()
    {
        if (string.IsNullOrWhiteSpace(_currency))
        {
            _currency = "INR";
        }

        _rates = await _responseAlertBox.GetResponseAndSetAlertAsync(() => _miscClient.GetRatesAsync(_currency));
        _responseAlertBox.SetAlert("Rates", _rates != null);
    }
}
