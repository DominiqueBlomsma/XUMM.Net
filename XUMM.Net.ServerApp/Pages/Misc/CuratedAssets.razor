@page "/curatedassets"
@using XUMM.Net.Clients.Interfaces
@using XUMM.Net.Models.Misc

@inject IXummMiscClient _miscClient

<PageTitle>Curated Assets</PageTitle>

<ResponseAlertBox @ref="_responseAlertBox"></ResponseAlertBox>

<h1>Curated Assets</h1>

@if (_details != null)
{
    <div class="row">
        <div class="mb-3">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Currencies</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var assetDetails in _details.OrderBy(x => x.Name))
                    {
                        <tr>
                            <th scope="row">@assetDetails.Id</th>
                            <td>@assetDetails.Name</td>
                            <td>@string.Join(", ", assetDetails.Currencies.Select(x=>x.Key).OrderBy(x=>x))</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="mb-3">
            <div class="btn-group" role="group">
                <button class="btn btn-primary" @onclick="GetCuratedAssetsAsync">Get Curated Assets</button>
            </div>
        </div>
    </div>
}

@code {
    private ResponseAlertBox _responseAlertBox = default!;
    private List<XummCuratedAssetsDetails>? _details;

    private async Task GetCuratedAssetsAsync()
    {
        var curatedAssets = await _responseAlertBox.GetResponseAndSetAlertAsync(() => _miscClient.GetCuratedAssetsAsync());
        _details = curatedAssets != null ? new List<XummCuratedAssetsDetails>(curatedAssets.Details.Values) : default;
        _responseAlertBox.SetAlert("Curated Assets", curatedAssets != null);
    }
}
