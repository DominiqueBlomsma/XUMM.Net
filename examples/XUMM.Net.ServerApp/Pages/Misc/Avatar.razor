@page "/avatar"
@using XUMM.NET.SDK.Extensions

@inject IOptions<XrplConfig> Config
@inject IXummMiscClient MiscClient

<PageTitle>Avatar</PageTitle>

<h1>Avatar</h1>

<div class="row align-items-start">
    <div class="col-md-6">
        <div class="mb-3">
            <label for="dimensions" class="form-label">Dimensions</label>
            <input id="dimensions" type="number" min="200" class="form-control" placeholder="Dimensions, eg. 200" aria-label="Dimensions" aria-describedby="basic-addon2" @bind="_dimensions">
            <small id="dimensionshelp" class="form-text text-muted">min. 200</small>
        </div>
        <div class="mb-3">
            <label for="padding" class="form-label">Padding</label>
            <input id="padding" type="number" min="0" class="form-control" placeholder="Padding, eg. 5" aria-label="Dimensions" aria-describedby="basic-addon2" @bind="_padding">
            <small id="paddinghelp" class="form-text text-muted">min. 0</small>
        </div>
        <div class="mb-3">
            <label for="accountaddress" class="form-label">Account Address</label>
            <input id="accountaddress" type="text" class="form-control" placeholder="Account address" aria-label="Account Address" aria-describedby="basic-addon2" @bind="_account">
            <small id="accountaddressHelp" class="form-text text-muted">eg. @Config.Value.Account</small>
        </div>
        <div class="btn-group mb-3" role="group">
            <button class="btn btn-primary" type="button" @onclick="GetAvatarUrl">Get Avatar</button>
        </div>
    </div>
    <div class="col-md-6 text-center">
        @if (_avatarUrl != null)
        {
            <div class="input-group mb-3">
                <figure class="figure">
                    <img src="@_avatarUrl" class="figure-img img-fluid rounded" alt="Avatar of account @_account">
                    <figcaption class="figure-caption text-break">@_avatarUrl</figcaption>
                </figure>
            </div>
        }
    </div>
</div>

@code {
    private string _account = default!;
    private int _dimensions;
    private int _padding;
    private string? _avatarUrl;

    private void GetAvatarUrl()
    {
        if (!_account.IsAccountAddress())
        {
            _account = Config.Value.Account;
        }

        if (_dimensions < 200)
        {
            _dimensions = 200;
        }

        if (_padding < 0)
        {
            _padding = 0;
        }

        _avatarUrl = MiscClient.GetAvatarUrl(_account, _dimensions, _padding);
    }
}
