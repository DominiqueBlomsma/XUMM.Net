@using XUMM.NET.SDK
@using XUMM.NET.SDK.Clients.Interfaces

@inject IXummMiscClient MiscClient;
@inject IXummMiscAppStorageClient MiscAppStorageClient;
@inject IXummPayloadClient PayloadClient;

<div class="col-md-6">
    <div class="mb-3">
        <label for="apikey" class="form-label">API Key <small>(Optional)</small></label>
        <input id="apikey" type="password" class="form-control @_cssClass" placeholder="API Key" aria-label="API Key" aria-describedby="basic-addon2" @bind="_apiKey">
        <small id="apikeyhelp" class="form-text text-muted">Leave empty to use the configured API Key.</small>
    </div>
    <div class="mb-3">
        <label for="apisecret" class="form-label">API Secret <small>(Optional)</small></label>
        <input id="apisecret" type="password" min="0" class="form-control @_cssClass" placeholder="API Secret" aria-label="API Secret" aria-describedby="basic-addon2" @bind="_apiSecret">
        <small id="apisecrethelp" class="form-text text-muted">Leave empty to use the configured API Secret.</small>
    </div>
</div>

@code {
    private string? _apiKey;
    private string? _apiSecret;
    private string? _cssClass;

    private XummSdk? GetXummSdk()
    {
        if (string.IsNullOrWhiteSpace(_apiKey) || string.IsNullOrWhiteSpace(_apiSecret))
        {
            return null;
        }

        XummSdk? xummSdk = null;

        try
        {
            xummSdk = new XummSdk(_apiKey, _apiSecret);
            _cssClass = null;
        }
        catch
        {
            _cssClass = "invalid";
        }

        StateHasChanged();
        return xummSdk;
    }

    public IXummMiscAppStorageClient AppStorage => GetXummSdk()?.AppStorage ?? MiscAppStorageClient;
    public IXummMiscClient Miscellaneous => GetXummSdk()?.Miscellaneous ?? MiscClient;
    public IXummPayloadClient Payload => GetXummSdk()?.Payload ?? PayloadClient;
}
